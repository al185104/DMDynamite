<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:DMDynamite.Models"
             xmlns:helper="clr-namespace:DMDynamite.Helpers"
             x:Class="DMDynamite.Views.Controls.LeftPanelView">
    
    <StackLayout BackgroundColor="{StaticResource White}" Margin="20" Spacing="20" VerticalOptions="FillAndExpand" >
        <!--title-->
        <Grid ColumnDefinitions="40,*" RowDefinitions="Auto,Auto" RowSpacing="0" VerticalOptions="Start">
            <BoxView Grid.Column="0" Grid.RowSpan="2" Color="LightGray" HeightRequest="40" WidthRequest="40"/>
            <Label Grid.Column="1" Text="DMDynamite" FontSize="Micro" FontAttributes="Bold" VerticalOptions="End" VerticalTextAlignment="End"/>
            <Label Grid.Column="1" Grid.Row="1" Text="Instagram blast application" FontSize="Caption" VerticalOptions="Start" VerticalTextAlignment="Start"/>
        </Grid>

        <!--options-->
        <VerticalStackLayout Spacing="10" >
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.Home}, FontFamily=Icons, Size=Small}" Text="Dashboard"/>
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.Settings}, FontFamily=Icons, Size=Small}" Text="Settings"/>
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.User}, FontFamily=Icons, Size=Small}" Text="Account Status"/>
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.Box}, FontFamily=Icons, Size=Small}" Text="Proxy Servers" 
                    Command="{Binding ShowProxyPopupCommand}"/>
        </VerticalStackLayout>

        <BoxView HeightRequest="1" HorizontalOptions="FillAndExpand" Color="LightGray" Margin="0,20,0,5"/>

        <Label Text="Targeted Posts" FontAttributes="Bold"/>
        <VerticalStackLayout Spacing="2">
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.CheckCircle}, FontFamily=Icons, Size=Small, Color={StaticResource TextPrimary}}" Text="Accounts" 
                        BackgroundColor="White" TextColor="{StaticResource TextPrimary}"
                        Command="{Binding ChangeSearchCommand}" CommandParameter="{Static models:SendingOption.Default}">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding SendingOption}" Value="Default">
                        <Setter Property="BackgroundColor" Value="{StaticResource Primary}"/>
                        <Setter Property="TextColor" Value="{StaticResource White}"/>
                        <Setter Property="ImageSource" Value="{FontImage Glyph={Static helper:Icon.CheckCircle}, FontFamily=Icons, Size=Small, Color={StaticResource White}}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.Hash}, FontFamily=Icons, Size=Small, Color={StaticResource TextPrimary}}" Text="Hashtag"
                        BackgroundColor="White" TextColor="{StaticResource TextPrimary}"
                        Command="{Binding ChangeSearchCommand}" CommandParameter="{Static models:SendingOption.Hashtag}">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding SendingOption}" Value="Hashtag">
                        <Setter Property="BackgroundColor" Value="{StaticResource Primary}"/>
                        <Setter Property="TextColor" Value="{StaticResource White}"/>
                        <Setter Property="ImageSource" Value="{FontImage Glyph={Static helper:Icon.Hash}, FontFamily=Icons, Size=Small, Color={StaticResource White}}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            <Button ImageSource="{FontImage Glyph={Static helper:Icon.MapPin}, FontFamily=Icons, Size=Small, Color={StaticResource TextPrimary}}" Text="Location"
                        BackgroundColor="White" TextColor="{StaticResource TextPrimary}"
                        Command="{Binding ChangeSearchCommand}" CommandParameter="{Static models:SendingOption.Location}">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding SendingOption}" Value="Location">
                        <Setter Property="BackgroundColor" Value="{StaticResource Primary}"/>
                        <Setter Property="TextColor" Value="{StaticResource White}"/>
                        <Setter Property="ImageSource" Value="{FontImage Glyph={Static helper:Icon.MapPin}, FontFamily=Icons, Size=Small, Color={StaticResource White}}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            <Grid Padding="0" ColumnDefinitions="*,*" RowDefinitions="Auto,Auto" VerticalOptions="Start" RowSpacing="0">
                <Label Grid.Column="0" Text="{Binding Latitude, StringFormat='Lat: {0}'}" FontSize="Caption"/>
                <Label Grid.Column="1" Text="{Binding Longitude, StringFormat='Long: {0}'}" FontSize="Caption"/>
            </Grid>
        </VerticalStackLayout>

        <BoxView HeightRequest="1" HorizontalOptions="FillAndExpand" Color="LightGray" Margin="0,0,0,5"/>
        <Label Text="Search for Accounts" FontAttributes="Bold" HorizontalOptions="StartAndExpand" VerticalTextAlignment="Center"/>
        <SearchBar x:Name="search" Placeholder="username" SearchCommand="{Binding SearchCommand}" SearchCommandParameter="{Binding Source={x:Reference search}, Path=Text}"/>
        <RefreshView Command="{Binding RefreshFollowersCommand}" IsRefreshing="{Binding IsRefreshing, Mode=TwoWay}" VerticalOptions="FillAndExpand">
            <CollectionView ItemsSource="{Binding Followers}">
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="0"/>
                </CollectionView.ItemsLayout>
                <CollectionView.EmptyView>
                    <Label Text="No searched accounts" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" VerticalOptions="FillAndExpand"/>
                </CollectionView.EmptyView>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*,Auto" ColumnSpacing="20" RowSpacing="0">
                            <Image Grid.RowSpan="2" Aspect="AspectFit" HeightRequest="32" WidthRequest="32" HorizontalOptions="Center">
                                <Image.Source>
                                    <UriImageSource Uri="{Binding ProfilePicture}" CacheValidity="1" CachingEnabled="True"/>
                                </Image.Source>
                                <Image.Clip>
                                    <EllipseGeometry Center="16,16" RadiusX="16" RadiusY="16"/>
                                </Image.Clip>
                            </Image>

                            <Label Grid.Column="1" Grid.Row="0" Text="{Binding UserName}" FontAttributes="Bold"/>
                            <Label Grid.Column="1" Grid.Row="1" Text="{Binding FullName}" FontSize="Caption"/>

                            <Label Grid.Column="2" Grid.RowSpan="2" Text="{Static helper:Icon.Lock}" FontFamily="Icons" IsVisible="{Binding IsPrivate}" HorizontalOptions="End"/>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </RefreshView>
        <Label Text="+ Add to queue" FontSize="Caption" FontAttributes="Bold" VerticalOptions="End" VerticalTextAlignment="End">
            <Label.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding AddAllToQueueCommand}"/>
            </Label.GestureRecognizers>
        </Label>
    </StackLayout>
</ContentView>
